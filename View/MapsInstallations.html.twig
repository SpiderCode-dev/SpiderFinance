<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBICttaOY1h75l8mjkTCSUz0bGbB4tHcGs"></script>

<div class="card shadow">
    <div class="card-body">
        <div class="form-row">
            <div class="col-md-12">
                <div class="form-row">
                    <legend class="text-info mt-2 mb-0"><i class="fas fa-map-marked-alt fa-fw"></i> Ubicaciones de usuarios</legend>
                    <div class="col-md-3">
                        <div class="form-group mb-2">
                            <label class="mb-0">Zona</label>
                            <select name="idzone" id="" class="form-control" autocomplete="off" parent="" value="1" data-field="idzone" data-source="sfi_zonas" data-fieldcode="id" data-fieldtitle="name" data-fieldfilter="">
                                <option value="">------</option>
                                <option value="1" selected="">Zona 1 Distrito Quito</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group mb-2">
                            <label class="mb-0">Pendiente de pago</label>
                            <select name="idzone" id="" class="form-control" autocomplete="off" parent="" value="1" data-field="idzone" data-source="sfi_zonas" data-fieldcode="id" data-fieldtitle="name" data-fieldfilter="">
                                <option value="">------</option>
                                <option value="1" selected="">Pagado</option>
                                <option value="1" selected="">Impago</option>
                                <option value="1" selected="">Todos</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group mb-2">
                            <label class="mb-0">Estado de instalaci√≥n</label>
                            <select name="idzone" id="" class="form-control" autocomplete="off" parent="" value="1" data-field="idzone" data-source="sfi_zonas" data-fieldcode="id" data-fieldtitle="name" data-fieldfilter="">
                                <option value="">------</option>
                                <option value="1" selected="">Pendiente</option>
                                <option value="1" selected="">Instalado</option>
                                <option value="1" selected="">Cancelado</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-3 text-right">
                        <button id="clean-map" class="btn btn-secondary btn-sm mt-4">
                            <i class="fas fa-eraser fa-fw"></i> Limpiar
                        </button>
                        <button id="search-map" class="btn btn-primary btn-sm mt-4">
                            <i class="fas fa-search fa-fw"></i> Buscar
                        </button>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12 mt-2">
                        <div id="map-clients" style="height: calc(100vh - 370px);"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    function buildMapMarksJson(data) {
        let json = {
            "markers": [],
            "lines": [],
        };
        for(let coord of data) {
            debugger
            let marker = {
                "lat": coord.lat,
                "lng": coord.lng,
                "title": coord.id,
            }
            json.markers.push(marker)
        }
        return json
    }

    $('#search-map').on('click', () => {
        fetch('/MapsClientController?action=get-clients-location')
            .then(response => response.json())
            .then(json => {
                debugger
                let data = buildMapMarksJson(json)
                drawMarkersAndLines(data)
            })
    })

    const icon = {
        url: "/Dinamic/Assets/Maps/user.svg", // url
        scaledSize: new google.maps.Size(30, 30), // scaled size
        origin: new google.maps.Point(0,0), // origin
        anchor: new google.maps.Point(0, 0) // anchor
    };

    let json = {
        "markers": [
            {
                "lat": -0.2853451502536884,
                "lng": -78.5433042353088,
                "title": "Marker 1",
                "infoWindow": {
                    "content": "<h3>Marker 1</h3><p>Some content here!</p>"
                }
            },
            {
                "lat": -0.28905311492359625,
                "lng":  -78.53981982279502,
                "title": "Marker 2",
                "infoWindow": {
                    "content": "<h3>Marker 2</h3><p>Some content here!</p>"
                }
            },
        ],
    };

    let myStyles =[
        {
            featureType: "poi",
            elementType: "labels",
            stylers: [
                { visibility: "off" }
            ]
        }
    ];

    let myOptions = {
        center: new google.maps.LatLng(-0.2853451502536884, -78.5433042353088),
        zoom: 13,
        suppressMarkers: true,
        suppressInfoWindows: true,
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        styles: myStyles
    };

    let map = new google.maps.Map(document.getElementById("map-clients"), myOptions);


    function drawMarkersAndLines(json) {
        // Get the map object

        // Loop through the markers in the JSON object
        for (let i = 0; i < json.markers.length; i++) {
            // Create a new marker object
            let marker = new google.maps.Marker({
                position: new google.maps.LatLng(json.markers[i].lat, json.markers[i].lng),
                map: map,
                title: json.markers[i].title,
                icon: "/Dinamic/Assets/Maps/user.svg",
                // infoWindow: new google.maps.InfoWindow({
                //     content: json.markers[i].infoWindow.content,
                // }),

            });
        }

        // Loop through the lines in the JSON object
        for (let i = 0; i < json.lines.length; i++) {
            // Create a new polyline object
            let line = new google.maps.Polyline({
                path: json.lines[i].points,
                map: map,
                stroke: json.lines[i].color,
                weight: json.lines[i].weight,
            });
        }
    }

    drawMarkersAndLines(json)
</script>